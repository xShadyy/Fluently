generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Difficulty {
  BEGINNER
  INTERMEDIATE
  ADVANCED
}

enum GameType {
  WORDS
  ENGLISH_GRAMMAR_TEST
}

model User {
  id        String   @id @default(uuid())
  username  String   @unique
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  Session   Session?
}

model Session {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String   @unique
  createdAt DateTime @default(now())
  expiresAt DateTime
}

model Game {
  id              String            @id @default(uuid())
  name            String
  type            GameType          @default(WORDS)
  questions       Question[]
  wordsQuestions  WordsQuestion[]
}

model Question {
  id            String         @id @default(uuid())
  text          String
  gameId        String
  game          Game           @relation(fields: [gameId], references: [id], onDelete: Cascade)
  options       Option[]
  correctAnswer CorrectAnswer?
}

model Option {
  id            String       @id @default(uuid())
  text          String
  questionId    String
  question      Question     @relation(fields: [questionId], references: [id], onDelete: Cascade)
  correctAnswer CorrectAnswer?
}

model CorrectAnswer {
  id         String   @id @default(uuid())
  questionId String   @unique
  question   Question @relation(fields: [questionId], references: [id], onDelete: Cascade)
  optionId   String   @unique
  option     Option   @relation(fields: [optionId], references: [id], onDelete: Cascade)
}

model WordsQuestion {
  id            String         @id @default(uuid())
  text          String
  difficulty    Difficulty   
  gameId        String
  game          Game           @relation(fields: [gameId], references: [id], onDelete: Cascade)
  options       WordsOption[]
  correctAnswer WordsCorrectAnswer?
}

model WordsOption {
  id                String         @id @default(uuid())
  text              String
  wordsQuestionId   String
  wordsQuestion     WordsQuestion  @relation(fields: [wordsQuestionId], references: [id], onDelete: Cascade)
  correctAnswer     WordsCorrectAnswer?
}

model WordsCorrectAnswer {
  id                String         @id @default(uuid())
  wordsQuestionId   String         @unique
  wordsQuestion     WordsQuestion  @relation(fields: [wordsQuestionId], references: [id], onDelete: Cascade)
  wordsOptionId     String         @unique
  wordsOption       WordsOption    @relation(fields: [wordsOptionId], references: [id], onDelete: Cascade)
}
